//Displays
$dflexs: flex, inline-flex, block, inline-block, grid, none;
@each $dflex in $dflexs {
    .d-#{$dflex} {
        display: $dflex;
    }
}

@include mq-min(sm) {
    $d-sm: flex, block, grid, none, inline-block;
    @each $d-sm in $d-sm {
        .d-sm-#{$d-sm} {
            display: $d-sm;
        }
    }
}

@include mq-min(md) {
    $d-ms: flex, block, grid, none, inline-block;
    @each $d-ms in $d-ms {
        .d-md-#{$d-ms} {
            display: $d-ms;
        }
    }
}

@include mq-min(lg) {
    $d-ls: flex, block, grid, none, inline-block;
    @each $d-ls in $d-ls {
        .d-lg-#{$d-ls} {
            display: $d-ls;
        }
    }
}

@include mq-min(xl) {
    $d-xl: flex, block, grid, none, inline-block;
    @each $d-xl in $d-xl {
        .d-xl-#{$d-xl} {
            display: $d-xl;
        }
    }
}

// Direcciones de flujo: aplicado a los contenedores flex
$directions: row, row-reverse, column, column-reverse;
@each $dflex in $directions {
    .d-#{$dflex} {
        display: $dflex;
    }
}

//Alineaci√≥n respeto al eje principal: aplicado a los contenedores flex
$justifys: flex-start, flex-end, center, space-between, space-around, space-evenly;
@each $justify in $justifys {
    .jc-#{$justify} {
        justify-content: $justify;
    }
}

//Cross-axis Alignment: applies to flex containers
$aligns: flex-start, flex-end, center, baseline, stretch;
@each $align in $aligns {
    .ai-#{$align} {
        align-items: $align;
    }
}

//Packing Flex Lines: applies to flex containers
$aligns: flex-start, flex-end, center, space-between, space-around, stretch;
@each $align in $aligns {
    .ac-#{$align} {
        align-content: $align;
    }
}

//faltan dos instrucciones